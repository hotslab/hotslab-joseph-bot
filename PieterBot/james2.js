'use strict';let fs=require('fs'),commandFileName='command.txt',stateFileName='state.json',key='',workingDirectory='',stateFile='',myself='',opponent='',gameMap='',mapSize='',cells='',buildings='',myBuildings=[],missiles='',buildingStats=[];initBot(process.argv.slice(2));function initBot(a){key=a[0],workingDirectory=a[1],stateFile=require('./'+stateFileName),myself=stateFile.players.filter((a)=>'A'===a.playerType)[0],opponent=stateFile.players.filter((a)=>'B'===a.playerType)[0],mapSize={x:stateFile.gameDetails.mapWidth,y:stateFile.gameDetails.mapHeight};let b=stateFile.gameDetails.buildingsStats;buildingStats[0]=b.DEFENSE,buildingStats[1]=b.ATTACK,buildingStats[2]=b.ENERGY,gameMap=stateFile.gameMap,initEntities(),runStrategy()}function initEntities(){cells=flatMap(gameMap),buildings=cells.filter((a)=>0<a.buildings.length).map((a)=>a.buildings),buildings=flatMap(buildings),myBuildings[0]=buildings.filter((a)=>'A'==a.playerType&&'DEFENSE'==a.buildingType),myBuildings[1]=buildings.filter((a)=>'A'==a.playerType&&'ATTACK'==a.buildingType),myBuildings[2]=buildings.filter((a)=>'A'==a.playerType&&'ENERGY'==a.buildingType),missiles=cells.filter((a)=>0<a.missiles.length).map((a)=>a.missiles),missiles=flatMap(missiles)}function currentIncome(){let a=buildings.filter((a)=>'A'==a.playerType&&'ENERGY'==a.buildingType);return stateFile.gameDetails.roundIncomeEnergy+a.length*stateFile.gameDetails.buildingsStats.ENERGY.energyGeneratedPerTurn}function shouldBuildEnergy(){return currentIncome()+3<Math.max(...buildingStats.map((a)=>a.price))&&myself.energy>=stateFile.gameDetails.buildingsStats.ENERGY.price}function whereToBuildDefender(a){let b=cells.filter((b)=>0==b.buildings.length&&b.x>=mapSize.x/2-2&&b.x<=mapSize.x/2-1&&b.y==a);return b.sort((a,b)=>a.x-b.x),0<b.length?b[0].y:null}function undefendedEnergy(){let a=buildings.filter((a)=>'A'==a.playerType&&'DEFENSE'==a.buildingType),c=buildings.filter((a)=>'A'==a.playerType&&'ENERGY'==a.buildingType);return buildings.filter((a)=>'B'==a.playerType&&'ATTACK'==a.buildingType).filter((c)=>!a.some((a)=>a.y==c.y)).filter((a)=>c.some((b)=>b.y==a.y))}function rowToDefend(){let a=buildings.filter((a)=>'A'==a.playerType&&'DEFENSE'==a.buildingType),b=buildings.filter((a)=>'B'==a.playerType&&'ATTACK'==a.buildingType).filter((c)=>!a.some((a)=>a.y==c.y)),c=a.filter((c)=>{let b=buildings.filter((a)=>'B'==a.playerType&&'ATTACK'==a.buildingType).filter((a)=>c.y==a.y),d=c.health/(buildingStats[1].weaponDamage*b.length);return buildingStats[0].constructionTime+3>=d&&whereToBuildDefender(a.y)});if(0<b.length){let a=buildings.filter((a)=>'A'==a.playerType&&'ENERGY'==a.buildingType),c=b.filter((c)=>a.some((a)=>a.y==c.y));if(0<c.length){let a=c.filter((a)=>whereToBuildDefender(a.y));if(0<a.length)return a[0].y}let d=buildings.filter((a)=>'A'==a.playerType&&'ATTACK'==a.buildingType),e=b.filter((a)=>d.some((b)=>b.y==a.y));if(0<e.length){let a=e.filter((a)=>whereToBuildDefender(a.y));if(0<a.length)return a[0].y}let f=b.filter((a)=>whereToBuildDefender(a.y));if(0<f.length)return f[0].y}return 0<c.length?c[0]:null}function shouldBuildDefence(){return(65>myself.health||0<undefendedEnergy.length)&&myself.energy>=stateFile.gameDetails.buildingsStats.DEFENSE.price&&rowToDefend()}function runStrategy(){let a=shouldBuildDefence();a?defendRow(a):shouldBuildEnergy()?buildEnergy():hasEnoughEnergyForMostExpensiveBuilding()?buildRandom():doNothingCommand()}function isUnderAttack(){let a=buildings.filter((a)=>'A'==a.playerType&&'DEFENSE'==a.buildingType),b=buildings.filter((a)=>'B'==a.playerType&&'ATTACK'==a.buildingType).filter((c)=>!a.some((a)=>a.y==c.y));return 0<b.length&&myself.energy>=buildingStats[0].price}function defendRow(a){let b={x:'',y:'',bt:''};b.x=whereToBuildDefender(a),b.y=a,b.bt=0,buildCommand(b.x,b.y,b.bt)}function hasEnoughEnergyForMostExpensiveBuilding(){return myself.energy>=Math.max(...buildingStats.map((a)=>a.price))}function buildEnergy(){let a=cells.filter((a)=>0==a.buildings.length&&1>=a.x).sort((c,a)=>c.y-a.y);a=a.filter((b)=>b.y==a[0].y),0==a.length&&doNothingCommand();let b=getRandomFromArray(a),c={x:'',y:'',bt:''};c.x=b.x,c.y=b.y,c.bt=2,buildCommand(c.x,c.y,c.bt)}function buildRandom(){let a=cells.filter((a)=>0==a.buildings.length&&2<a.x&&a.x<mapSize.x/2-2);if(0==a.length)return void doNothingCommand();let b=getRandomFromArray(a),c={x:'',y:'',bt:''};c.x=b.x,c.y=b.y,c.bt=1,buildCommand(c.x,c.y,c.bt)}function buildCommand(a,b,c){writeToFile(commandFileName,`${a},${b},${c}`)}function doNothingCommand(){writeToFile(commandFileName,``)}function writeToFile(a,b){fs.writeFile('./'+a,b,function(a){if(a)return console.log(a)})}function flatMap(a){return a.reduce((a,b)=>a.concat(b),[])}function getRandomInteger(a){return Math.round(Math.random()*a)}function getArrayRange(a){return Array.from({length:a},(a,b)=>b)}function getRandomFromArray(a){return a[Math.floor(Math.random()*a.length)]}
